// This file was generated by gir (https://github.com/gtk-rs/gir)
// from ../gir-files
// DO NOT EDIT

use glib::object::IsA;
use glib::translate::*;
use std::fmt;

glib::wrapper! {
    #[doc(alias = "DbusmenuGtkClient")]
    pub struct Client(Object<ffi::DbusmenuGtkClient, ffi::DbusmenuGtkClientClass>);

    match fn {
        type_ => || ffi::dbusmenu_gtkclient_get_type(),
    }
}

impl Client {
        pub const NONE: Option<&'static Client> = None;
    

    #[doc(alias = "dbusmenu_gtkclient_new")]
    pub fn new(dbus_name: &str, dbus_object: &str) -> Client {
        assert_initialized_main_thread!();
        unsafe {
            from_glib_full(ffi::dbusmenu_gtkclient_new(dbus_name.to_glib_none().0, dbus_object.to_glib_none().0))
        }
    }
}

pub trait ClientExt: 'static {
    //#[doc(alias = "dbusmenu_gtkclient_get_accel_group")]
    //#[doc(alias = "get_accel_group")]
    //fn accel_group(&self) -> /*Ignored*/Option<gtk::AccelGroup>;

    //#[doc(alias = "dbusmenu_gtkclient_menuitem_get")]
    //fn menuitem_get(&self, item: /*Ignored*/&dbusmenu::Menuitem) -> /*Ignored*/Option<gtk::MenuItem>;

    //#[doc(alias = "dbusmenu_gtkclient_menuitem_get_submenu")]
    //fn menuitem_get_submenu(&self, item: /*Ignored*/&dbusmenu::Menuitem) -> /*Ignored*/Option<gtk::Menu>;

    //#[doc(alias = "dbusmenu_gtkclient_newitem_base")]
    //fn newitem_base(&self, item: /*Ignored*/&dbusmenu::Menuitem, gmi: /*Ignored*/&gtk::MenuItem, parent: /*Ignored*/&dbusmenu::Menuitem);

    //#[doc(alias = "dbusmenu_gtkclient_set_accel_group")]
    //fn set_accel_group(&self, agroup: /*Ignored*/&gtk::AccelGroup);
}

impl<O: IsA<Client>> ClientExt for O {
    //fn accel_group(&self) -> /*Ignored*/Option<gtk::AccelGroup> {
    //    unsafe { TODO: call ffi:dbusmenu_gtkclient_get_accel_group() }
    //}

    //fn menuitem_get(&self, item: /*Ignored*/&dbusmenu::Menuitem) -> /*Ignored*/Option<gtk::MenuItem> {
    //    unsafe { TODO: call ffi:dbusmenu_gtkclient_menuitem_get() }
    //}

    //fn menuitem_get_submenu(&self, item: /*Ignored*/&dbusmenu::Menuitem) -> /*Ignored*/Option<gtk::Menu> {
    //    unsafe { TODO: call ffi:dbusmenu_gtkclient_menuitem_get_submenu() }
    //}

    //fn newitem_base(&self, item: /*Ignored*/&dbusmenu::Menuitem, gmi: /*Ignored*/&gtk::MenuItem, parent: /*Ignored*/&dbusmenu::Menuitem) {
    //    unsafe { TODO: call ffi:dbusmenu_gtkclient_newitem_base() }
    //}

    //fn set_accel_group(&self, agroup: /*Ignored*/&gtk::AccelGroup) {
    //    unsafe { TODO: call ffi:dbusmenu_gtkclient_set_accel_group() }
    //}
}

impl fmt::Display for Client {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        f.write_str("Client")
    }
}
